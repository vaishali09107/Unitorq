{"ast":null,"code":"var _jsxFileName = \"/Users/parthchavhan/Desktop/exomac-business-react-js-template-2023-11-27-05-26-00-utc/exomac/src/components/Accordion/item.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, Children, isValidElement, cloneElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AccordionContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccordionItem = _ref => {\n  _s();\n\n  let {\n    children,\n    id\n  } = _ref;\n  const {\n    setIdsOnInit,\n    activeId\n  } = useContext(AccordionContext);\n  useEffect(() => {\n    if (!setIdsOnInit) return;\n    setIdsOnInit(id);\n  }, [id]);\n  const childrenWithProps = Children.map(children, child => {\n    // checking isValidElement is the safe way and avoids a typescript error too\n    const props = {\n      id,\n      activeId\n    };\n\n    if ( /*#__PURE__*/isValidElement(child)) {\n      return /*#__PURE__*/cloneElement(child, props);\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion-item\",\n    id: id,\n    children: childrenWithProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AccordionItem, \"XymfBEAg7DobHcWvjRhPUaBESNY=\");\n\n_c = AccordionItem;\nAccordionItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nexport default AccordionItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionItem\");","map":{"version":3,"names":["useContext","useEffect","Children","isValidElement","cloneElement","PropTypes","AccordionContext","AccordionItem","children","id","setIdsOnInit","activeId","childrenWithProps","map","child","props","propTypes","node","isRequired","oneOfType","number","string"],"sources":["/Users/parthchavhan/Desktop/exomac-business-react-js-template-2023-11-27-05-26-00-utc/exomac/src/components/Accordion/item.jsx"],"sourcesContent":["import {\r\n    useContext,\r\n    useEffect,\r\n    Children,\r\n    isValidElement,\r\n    cloneElement,\r\n} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AccordionContext } from \"./context\";\r\n\r\nconst AccordionItem = ({\r\n    children,\r\n    id\r\n}) => {\r\n    const { setIdsOnInit, activeId } = useContext(AccordionContext);\r\n\r\n    useEffect(() => {\r\n        if (!setIdsOnInit) return;\r\n        setIdsOnInit(id);\r\n    }, [id]);\r\n\r\n    const childrenWithProps = Children.map(children, (child) => {\r\n        // checking isValidElement is the safe way and avoids a typescript error too\r\n        const props = { id, activeId };\r\n        if (isValidElement(child)) {\r\n            return cloneElement(child, props);\r\n        }\r\n        return child;\r\n    });\r\n\r\n    return (\r\n        <div className=\"accordion-item\" id={id}>\r\n            {childrenWithProps}\r\n        </div>\r\n    );\r\n};\r\n\r\nAccordionItem.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n}\r\n\r\nexport default AccordionItem;\r\n"],"mappings":";;;AAAA,SACIA,UADJ,EAEIC,SAFJ,EAGIC,QAHJ,EAIIC,cAJJ,EAKIC,YALJ,QAMO,OANP;AAOA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,MAAMC,aAAa,GAAG,QAGhB;EAAA;;EAAA,IAHiB;IACnBC,QADmB;IAEnBC;EAFmB,CAGjB;EACF,MAAM;IAAEC,YAAF;IAAgBC;EAAhB,IAA6BX,UAAU,CAACM,gBAAD,CAA7C;EAEAL,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,YAAL,EAAmB;IACnBA,YAAY,CAACD,EAAD,CAAZ;EACH,CAHQ,EAGN,CAACA,EAAD,CAHM,CAAT;EAKA,MAAMG,iBAAiB,GAAGV,QAAQ,CAACW,GAAT,CAAaL,QAAb,EAAwBM,KAAD,IAAW;IACxD;IACA,MAAMC,KAAK,GAAG;MAAEN,EAAF;MAAME;IAAN,CAAd;;IACA,kBAAIR,cAAc,CAACW,KAAD,CAAlB,EAA2B;MACvB,oBAAOV,YAAY,CAACU,KAAD,EAAQC,KAAR,CAAnB;IACH;;IACD,OAAOD,KAAP;EACH,CAPyB,CAA1B;EASA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAgC,EAAE,EAAEL,EAApC;IAAA,UACKG;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAzBD;;GAAML,a;;KAAAA,a;AA2BNA,aAAa,CAACS,SAAd,GAA0B;EACtBR,QAAQ,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADH;EAEtBT,EAAE,EAAEJ,SAAS,CAACc,SAAV,CAAoB,CAACd,SAAS,CAACe,MAAX,EAAmBf,SAAS,CAACgB,MAA7B,CAApB;AAFkB,CAA1B;AAKA,eAAed,aAAf"},"metadata":{},"sourceType":"module"}