{"ast":null,"code":"/*!\n * Isotope v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n */\n(function (window, factory) {\n  // universal module definition\n\n  /* jshint strict: false */\n\n  /*globals define, module, require */\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['outlayer/outlayer', 'get-size/get-size', 'desandro-matches-selector/matches-selector', 'fizzy-ui-utils/utils', './item', './layout-mode', // include default layout modes\n    './layout-modes/masonry', './layout-modes/fit-rows', './layout-modes/vertical'], function (Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n      return factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('outlayer'), require('get-size'), require('desandro-matches-selector'), require('fizzy-ui-utils'), require('./item'), require('./layout-mode'), // include default layout modes\n    require('./layout-modes/masonry'), require('./layout-modes/fit-rows'), require('./layout-modes/vertical'));\n  } else {\n    // browser global\n    window.Isotope = factory(window, window.Outlayer, window.getSize, window.matchesSelector, window.fizzyUIUtils, window.Isotope.Item, window.Isotope.LayoutMode);\n  }\n})(window, function factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n  'use strict'; // -------------------------- vars -------------------------- //\n\n  var jQuery = window.jQuery; // -------------------------- helpers -------------------------- //\n\n  var trim = String.prototype.trim ? function (str) {\n    return str.trim();\n  } : function (str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }; // -------------------------- isotopeDefinition -------------------------- //\n  // create an Outlayer layout class\n\n  var Isotope = Outlayer.create('isotope', {\n    layoutMode: 'masonry',\n    isJQueryFiltering: true,\n    sortAscending: true\n  });\n  Isotope.Item = Item;\n  Isotope.LayoutMode = LayoutMode;\n  var proto = Isotope.prototype;\n\n  proto._create = function () {\n    this.itemGUID = 0; // functions that sort items\n\n    this._sorters = {};\n\n    this._getSorters(); // call super\n\n\n    Outlayer.prototype._create.call(this); // create layout modes\n\n\n    this.modes = {}; // start filteredItems with all items\n\n    this.filteredItems = this.items; // keep of track of sortBys\n\n    this.sortHistory = ['original-order']; // create from registered layout modes\n\n    for (var name in LayoutMode.modes) {\n      this._initLayoutMode(name);\n    }\n  };\n\n  proto.reloadItems = function () {\n    // reset item ID counter\n    this.itemGUID = 0; // call super\n\n    Outlayer.prototype.reloadItems.call(this);\n  };\n\n  proto._itemize = function () {\n    var items = Outlayer.prototype._itemize.apply(this, arguments); // assign ID for original-order\n\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      item.id = this.itemGUID++;\n    }\n\n    this._updateItemsSortData(items);\n\n    return items;\n  }; // -------------------------- layout -------------------------- //\n\n\n  proto._initLayoutMode = function (name) {\n    var Mode = LayoutMode.modes[name]; // set mode options\n    // HACK extend initial options, back-fill in default options\n\n    var initialOpts = this.options[name] || {};\n    this.options[name] = Mode.options ? utils.extend(Mode.options, initialOpts) : initialOpts; // init layout mode instance\n\n    this.modes[name] = new Mode(this);\n  };\n\n  proto.layout = function () {\n    // if first time doing layout, do all magic\n    if (!this._isLayoutInited && this._getOption('initLayout')) {\n      this.arrange();\n      return;\n    }\n\n    this._layout();\n  }; // private method to be used in layout() & magic()\n\n\n  proto._layout = function () {\n    // don't animate first layout\n    var isInstant = this._getIsInstant(); // layout flow\n\n\n    this._resetLayout();\n\n    this._manageStamps();\n\n    this.layoutItems(this.filteredItems, isInstant); // flag for initalized\n\n    this._isLayoutInited = true;\n  }; // filter + sort + layout\n\n\n  proto.arrange = function (opts) {\n    // set any options pass\n    this.option(opts);\n\n    this._getIsInstant(); // filter, sort, and layout\n    // filter\n\n\n    var filtered = this._filter(this.items);\n\n    this.filteredItems = filtered.matches;\n\n    this._bindArrangeComplete();\n\n    if (this._isInstant) {\n      this._noTransition(this._hideReveal, [filtered]);\n    } else {\n      this._hideReveal(filtered);\n    }\n\n    this._sort();\n\n    this._layout();\n  }; // alias to _init for main plugin method\n\n\n  proto._init = proto.arrange;\n\n  proto._hideReveal = function (filtered) {\n    this.reveal(filtered.needReveal);\n    this.hide(filtered.needHide);\n  }; // HACK\n  // Don't animate/transition first layout\n  // Or don't animate/transition other layouts\n\n\n  proto._getIsInstant = function () {\n    var isLayoutInstant = this._getOption('layoutInstant');\n\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant : !this._isLayoutInited;\n    this._isInstant = isInstant;\n    return isInstant;\n  }; // listen for layoutComplete, hideComplete and revealComplete\n  // to trigger arrangeComplete\n\n\n  proto._bindArrangeComplete = function () {\n    // listen for 3 events to trigger arrangeComplete\n    var isLayoutComplete, isHideComplete, isRevealComplete;\n\n    var _this = this;\n\n    function arrangeParallelCallback() {\n      if (isLayoutComplete && isHideComplete && isRevealComplete) {\n        _this.dispatchEvent('arrangeComplete', null, [_this.filteredItems]);\n      }\n    }\n\n    this.once('layoutComplete', function () {\n      isLayoutComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('hideComplete', function () {\n      isHideComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('revealComplete', function () {\n      isRevealComplete = true;\n      arrangeParallelCallback();\n    });\n  }; // -------------------------- filter -------------------------- //\n\n\n  proto._filter = function (items) {\n    var filter = this.options.filter;\n    filter = filter || '*';\n    var matches = [];\n    var hiddenMatched = [];\n    var visibleUnmatched = [];\n\n    var test = this._getFilterTest(filter); // test each item\n\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (item.isIgnored) {\n        continue;\n      } // add item to either matched or unmatched group\n\n\n      var isMatched = test(item); // item.isFilterMatched = isMatched;\n      // add to matches if its a match\n\n      if (isMatched) {\n        matches.push(item);\n      } // add to additional group if item needs to be hidden or revealed\n\n\n      if (isMatched && item.isHidden) {\n        hiddenMatched.push(item);\n      } else if (!isMatched && !item.isHidden) {\n        visibleUnmatched.push(item);\n      }\n    } // return collections of items to be manipulated\n\n\n    return {\n      matches: matches,\n      needReveal: hiddenMatched,\n      needHide: visibleUnmatched\n    };\n  }; // get a jQuery, function, or a matchesSelector test given the filter\n\n\n  proto._getFilterTest = function (filter) {\n    if (jQuery && this.options.isJQueryFiltering) {\n      // use jQuery\n      return function (item) {\n        return jQuery(item.element).is(filter);\n      };\n    }\n\n    if (typeof filter == 'function') {\n      // use filter as function\n      return function (item) {\n        return filter(item.element);\n      };\n    } // default, use filter as selector string\n\n\n    return function (item) {\n      return matchesSelector(item.element, filter);\n    };\n  }; // -------------------------- sorting -------------------------- //\n\n  /**\n   * @params {Array} elems\n   * @public\n   */\n\n\n  proto.updateSortData = function (elems) {\n    // get items\n    var items;\n\n    if (elems) {\n      elems = utils.makeArray(elems);\n      items = this.getItems(elems);\n    } else {\n      // update all items if no elems provided\n      items = this.items;\n    }\n\n    this._getSorters();\n\n    this._updateItemsSortData(items);\n  };\n\n  proto._getSorters = function () {\n    var getSortData = this.options.getSortData;\n\n    for (var key in getSortData) {\n      var sorter = getSortData[key];\n      this._sorters[key] = mungeSorter(sorter);\n    }\n  };\n  /**\n   * @params {Array} items - of Isotope.Items\n   * @private\n   */\n\n\n  proto._updateItemsSortData = function (items) {\n    // do not update if no items\n    var len = items && items.length;\n\n    for (var i = 0; len && i < len; i++) {\n      var item = items[i];\n      item.updateSortData();\n    }\n  }; // ----- munge sorter ----- //\n  // encapsulate this, as we just need mungeSorter\n  // other functions in here are just for munging\n\n\n  var mungeSorter = function () {\n    // add a magic layer to sorters for convienent shorthands\n    // `.foo-bar` will use the text of .foo-bar querySelector\n    // `[foo-bar]` will use attribute\n    // you can also add parser\n    // `.foo-bar parseInt` will parse that as a number\n    function mungeSorter(sorter) {\n      // if not a string, return function or whatever it is\n      if (typeof sorter != 'string') {\n        return sorter;\n      } // parse the sorter string\n\n\n      var args = trim(sorter).split(' ');\n      var query = args[0]; // check if query looks like [an-attribute]\n\n      var attrMatch = query.match(/^\\[(.+)\\]$/);\n      var attr = attrMatch && attrMatch[1];\n      var getValue = getValueGetter(attr, query); // use second argument as a parser\n\n      var parser = Isotope.sortDataParsers[args[1]]; // parse the value, if there was a parser\n\n      sorter = parser ? function (elem) {\n        return elem && parser(getValue(elem));\n      } : // otherwise just return value\n      function (elem) {\n        return elem && getValue(elem);\n      };\n      return sorter;\n    } // get an attribute getter, or get text of the querySelector\n\n\n    function getValueGetter(attr, query) {\n      // if query looks like [foo-bar], get attribute\n      if (attr) {\n        return function getAttribute(elem) {\n          return elem.getAttribute(attr);\n        };\n      } // otherwise, assume its a querySelector, and get its text\n\n\n      return function getChildText(elem) {\n        var child = elem.querySelector(query);\n        return child && child.textContent;\n      };\n    }\n\n    return mungeSorter;\n  }(); // parsers used in getSortData shortcut strings\n\n\n  Isotope.sortDataParsers = {\n    'parseInt': function (val) {\n      return parseInt(val, 10);\n    },\n    'parseFloat': function (val) {\n      return parseFloat(val);\n    }\n  }; // ----- sort method ----- //\n  // sort filteredItem order\n\n  proto._sort = function () {\n    if (!this.options.sortBy) {\n      return;\n    } // keep track of sortBy History\n\n\n    var sortBys = utils.makeArray(this.options.sortBy);\n\n    if (!this._getIsSameSortBy(sortBys)) {\n      // concat all sortBy and sortHistory, add to front, oldest goes in last\n      this.sortHistory = sortBys.concat(this.sortHistory);\n    } // sort magic\n\n\n    var itemSorter = getItemSorter(this.sortHistory, this.options.sortAscending);\n    this.filteredItems.sort(itemSorter);\n  }; // check if sortBys is same as start of sortHistory\n\n\n  proto._getIsSameSortBy = function (sortBys) {\n    for (var i = 0; i < sortBys.length; i++) {\n      if (sortBys[i] != this.sortHistory[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // returns a function used for sorting\n\n\n  function getItemSorter(sortBys, sortAsc) {\n    return function sorter(itemA, itemB) {\n      // cycle through all sortKeys\n      for (var i = 0; i < sortBys.length; i++) {\n        var sortBy = sortBys[i];\n        var a = itemA.sortData[sortBy];\n        var b = itemB.sortData[sortBy];\n\n        if (a > b || a < b) {\n          // if sortAsc is an object, use the value given the sortBy key\n          var isAscending = sortAsc[sortBy] !== undefined ? sortAsc[sortBy] : sortAsc;\n          var direction = isAscending ? 1 : -1;\n          return (a > b ? 1 : -1) * direction;\n        }\n      }\n\n      return 0;\n    };\n  } // -------------------------- methods -------------------------- //\n  // get layout mode\n\n\n  proto._mode = function () {\n    var layoutMode = this.options.layoutMode;\n    var mode = this.modes[layoutMode];\n\n    if (!mode) {\n      // TODO console.error\n      throw new Error('No layout mode: ' + layoutMode);\n    } // HACK sync mode's options\n    // any options set after init for layout mode need to be synced\n\n\n    mode.options = this.options[layoutMode];\n    return mode;\n  };\n\n  proto._resetLayout = function () {\n    // trigger original reset layout\n    Outlayer.prototype._resetLayout.call(this);\n\n    this._mode()._resetLayout();\n  };\n\n  proto._getItemLayoutPosition = function (item) {\n    return this._mode()._getItemLayoutPosition(item);\n  };\n\n  proto._manageStamp = function (stamp) {\n    this._mode()._manageStamp(stamp);\n  };\n\n  proto._getContainerSize = function () {\n    return this._mode()._getContainerSize();\n  };\n\n  proto.needsResizeLayout = function () {\n    return this._mode().needsResizeLayout();\n  }; // -------------------------- adding & removing -------------------------- //\n  // HEADS UP overwrites default Outlayer appended\n\n\n  proto.appended = function (elems) {\n    var items = this.addItems(elems);\n\n    if (!items.length) {\n      return;\n    } // filter, layout, reveal new items\n\n\n    var filteredItems = this._filterRevealAdded(items); // add to filteredItems\n\n\n    this.filteredItems = this.filteredItems.concat(filteredItems);\n  }; // HEADS UP overwrites default Outlayer prepended\n\n\n  proto.prepended = function (elems) {\n    var items = this._itemize(elems);\n\n    if (!items.length) {\n      return;\n    } // start new layout\n\n\n    this._resetLayout();\n\n    this._manageStamps(); // filter, layout, reveal new items\n\n\n    var filteredItems = this._filterRevealAdded(items); // layout previous items\n\n\n    this.layoutItems(this.filteredItems); // add to items and filteredItems\n\n    this.filteredItems = filteredItems.concat(this.filteredItems);\n    this.items = items.concat(this.items);\n  };\n\n  proto._filterRevealAdded = function (items) {\n    var filtered = this._filter(items);\n\n    this.hide(filtered.needHide); // reveal all new items\n\n    this.reveal(filtered.matches); // layout new items, no transition\n\n    this.layoutItems(filtered.matches, true);\n    return filtered.matches;\n  };\n  /**\n   * Filter, sort, and layout newly-appended item elements\n   * @param {Array or NodeList or Element} elems\n   */\n\n\n  proto.insert = function (elems) {\n    var items = this.addItems(elems);\n\n    if (!items.length) {\n      return;\n    } // append item elements\n\n\n    var i, item;\n    var len = items.length;\n\n    for (i = 0; i < len; i++) {\n      item = items[i];\n      this.element.appendChild(item.element);\n    } // filter new stuff\n\n\n    var filteredInsertItems = this._filter(items).matches; // set flag\n\n\n    for (i = 0; i < len; i++) {\n      items[i].isLayoutInstant = true;\n    }\n\n    this.arrange(); // reset flag\n\n    for (i = 0; i < len; i++) {\n      delete items[i].isLayoutInstant;\n    }\n\n    this.reveal(filteredInsertItems);\n  };\n\n  var _remove = proto.remove;\n\n  proto.remove = function (elems) {\n    elems = utils.makeArray(elems);\n    var removeItems = this.getItems(elems); // do regular thing\n\n    _remove.call(this, elems); // bail if no items to remove\n\n\n    var len = removeItems && removeItems.length; // remove elems from filteredItems\n\n    for (var i = 0; len && i < len; i++) {\n      var item = removeItems[i]; // remove item from collection\n\n      utils.removeFrom(this.filteredItems, item);\n    }\n  };\n\n  proto.shuffle = function () {\n    // update random sortData\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      item.sortData.random = Math.random();\n    }\n\n    this.options.sortBy = 'random';\n\n    this._sort();\n\n    this._layout();\n  };\n  /**\n   * trigger fn without transition\n   * kind of hacky to have this in the first place\n   * @param {Function} fn\n   * @param {Array} args\n   * @returns ret\n   * @private\n   */\n\n\n  proto._noTransition = function (fn, args) {\n    // save transitionDuration before disabling\n    var transitionDuration = this.options.transitionDuration; // disable transition\n\n    this.options.transitionDuration = 0; // do it\n\n    var returnValue = fn.apply(this, args); // re-enable transition for reveal\n\n    this.options.transitionDuration = transitionDuration;\n    return returnValue;\n  }; // ----- helper methods ----- //\n\n  /**\n   * getter method for getting filtered item elements\n   * @returns {Array} elems - collection of item elements\n   */\n\n\n  proto.getFilteredItemElements = function () {\n    return this.filteredItems.map(function (item) {\n      return item.element;\n    });\n  }; // -----  ----- //\n\n\n  return Isotope;\n});","map":{"version":3,"names":["window","factory","define","amd","Outlayer","getSize","matchesSelector","utils","Item","LayoutMode","module","exports","require","Isotope","fizzyUIUtils","jQuery","trim","String","prototype","str","replace","create","layoutMode","isJQueryFiltering","sortAscending","proto","_create","itemGUID","_sorters","_getSorters","call","modes","filteredItems","items","sortHistory","name","_initLayoutMode","reloadItems","_itemize","apply","arguments","i","length","item","id","_updateItemsSortData","Mode","initialOpts","options","extend","layout","_isLayoutInited","_getOption","arrange","_layout","isInstant","_getIsInstant","_resetLayout","_manageStamps","layoutItems","opts","option","filtered","_filter","matches","_bindArrangeComplete","_isInstant","_noTransition","_hideReveal","_sort","_init","reveal","needReveal","hide","needHide","isLayoutInstant","undefined","isLayoutComplete","isHideComplete","isRevealComplete","_this","arrangeParallelCallback","dispatchEvent","once","filter","hiddenMatched","visibleUnmatched","test","_getFilterTest","isIgnored","isMatched","push","isHidden","element","is","updateSortData","elems","makeArray","getItems","getSortData","key","sorter","mungeSorter","len","args","split","query","attrMatch","match","attr","getValue","getValueGetter","parser","sortDataParsers","elem","getAttribute","getChildText","child","querySelector","textContent","val","parseInt","parseFloat","sortBy","sortBys","_getIsSameSortBy","concat","itemSorter","getItemSorter","sort","sortAsc","itemA","itemB","a","sortData","b","isAscending","direction","_mode","mode","Error","_getItemLayoutPosition","_manageStamp","stamp","_getContainerSize","needsResizeLayout","appended","addItems","_filterRevealAdded","prepended","insert","appendChild","filteredInsertItems","_remove","remove","removeItems","removeFrom","shuffle","random","Math","fn","transitionDuration","returnValue","getFilteredItemElements","map"],"sources":["/Users/parthchavhan/Desktop/exomac-business-react-js-template-2023-11-27-05-26-00-utc/exomac/node_modules/isotope-layout/js/isotope.js"],"sourcesContent":["/*!\n * Isotope v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size',\n        'desandro-matches-selector/matches-selector',\n        'fizzy-ui-utils/utils',\n        './item',\n        './layout-mode',\n        // include default layout modes\n        './layout-modes/masonry',\n        './layout-modes/fit-rows',\n        './layout-modes/vertical'\n      ],\n      function( Outlayer, getSize, matchesSelector, utils, Item, LayoutMode ) {\n        return factory( window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode );\n      });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('outlayer'),\n      require('get-size'),\n      require('desandro-matches-selector'),\n      require('fizzy-ui-utils'),\n      require('./item'),\n      require('./layout-mode'),\n      // include default layout modes\n      require('./layout-modes/masonry'),\n      require('./layout-modes/fit-rows'),\n      require('./layout-modes/vertical')\n    );\n  } else {\n    // browser global\n    window.Isotope = factory(\n      window,\n      window.Outlayer,\n      window.getSize,\n      window.matchesSelector,\n      window.fizzyUIUtils,\n      window.Isotope.Item,\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( window, Outlayer, getSize, matchesSelector, utils,\n  Item, LayoutMode ) {\n\n'use strict';\n\n// -------------------------- vars -------------------------- //\n\nvar jQuery = window.jQuery;\n\n// -------------------------- helpers -------------------------- //\n\nvar trim = String.prototype.trim ?\n  function( str ) {\n    return str.trim();\n  } :\n  function( str ) {\n    return str.replace( /^\\s+|\\s+$/g, '' );\n  };\n\n// -------------------------- isotopeDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Isotope = Outlayer.create( 'isotope', {\n    layoutMode: 'masonry',\n    isJQueryFiltering: true,\n    sortAscending: true\n  });\n\n  Isotope.Item = Item;\n  Isotope.LayoutMode = LayoutMode;\n\n  var proto = Isotope.prototype;\n\n  proto._create = function() {\n    this.itemGUID = 0;\n    // functions that sort items\n    this._sorters = {};\n    this._getSorters();\n    // call super\n    Outlayer.prototype._create.call( this );\n\n    // create layout modes\n    this.modes = {};\n    // start filteredItems with all items\n    this.filteredItems = this.items;\n    // keep of track of sortBys\n    this.sortHistory = [ 'original-order' ];\n    // create from registered layout modes\n    for ( var name in LayoutMode.modes ) {\n      this._initLayoutMode( name );\n    }\n  };\n\n  proto.reloadItems = function() {\n    // reset item ID counter\n    this.itemGUID = 0;\n    // call super\n    Outlayer.prototype.reloadItems.call( this );\n  };\n\n  proto._itemize = function() {\n    var items = Outlayer.prototype._itemize.apply( this, arguments );\n    // assign ID for original-order\n    for ( var i=0; i < items.length; i++ ) {\n      var item = items[i];\n      item.id = this.itemGUID++;\n    }\n    this._updateItemsSortData( items );\n    return items;\n  };\n\n\n  // -------------------------- layout -------------------------- //\n\n  proto._initLayoutMode = function( name ) {\n    var Mode = LayoutMode.modes[ name ];\n    // set mode options\n    // HACK extend initial options, back-fill in default options\n    var initialOpts = this.options[ name ] || {};\n    this.options[ name ] = Mode.options ?\n      utils.extend( Mode.options, initialOpts ) : initialOpts;\n    // init layout mode instance\n    this.modes[ name ] = new Mode( this );\n  };\n\n\n  proto.layout = function() {\n    // if first time doing layout, do all magic\n    if ( !this._isLayoutInited && this._getOption('initLayout') ) {\n      this.arrange();\n      return;\n    }\n    this._layout();\n  };\n\n  // private method to be used in layout() & magic()\n  proto._layout = function() {\n    // don't animate first layout\n    var isInstant = this._getIsInstant();\n    // layout flow\n    this._resetLayout();\n    this._manageStamps();\n    this.layoutItems( this.filteredItems, isInstant );\n\n    // flag for initalized\n    this._isLayoutInited = true;\n  };\n\n  // filter + sort + layout\n  proto.arrange = function( opts ) {\n    // set any options pass\n    this.option( opts );\n    this._getIsInstant();\n    // filter, sort, and layout\n\n    // filter\n    var filtered = this._filter( this.items );\n    this.filteredItems = filtered.matches;\n\n    this._bindArrangeComplete();\n\n    if ( this._isInstant ) {\n      this._noTransition( this._hideReveal, [ filtered ] );\n    } else {\n      this._hideReveal( filtered );\n    }\n\n    this._sort();\n    this._layout();\n  };\n  // alias to _init for main plugin method\n  proto._init = proto.arrange;\n\n  proto._hideReveal = function( filtered ) {\n    this.reveal( filtered.needReveal );\n    this.hide( filtered.needHide );\n  };\n\n  // HACK\n  // Don't animate/transition first layout\n  // Or don't animate/transition other layouts\n  proto._getIsInstant = function() {\n    var isLayoutInstant = this._getOption('layoutInstant');\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant :\n      !this._isLayoutInited;\n    this._isInstant = isInstant;\n    return isInstant;\n  };\n\n  // listen for layoutComplete, hideComplete and revealComplete\n  // to trigger arrangeComplete\n  proto._bindArrangeComplete = function() {\n    // listen for 3 events to trigger arrangeComplete\n    var isLayoutComplete, isHideComplete, isRevealComplete;\n    var _this = this;\n    function arrangeParallelCallback() {\n      if ( isLayoutComplete && isHideComplete && isRevealComplete ) {\n        _this.dispatchEvent( 'arrangeComplete', null, [ _this.filteredItems ] );\n      }\n    }\n    this.once( 'layoutComplete', function() {\n      isLayoutComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once( 'hideComplete', function() {\n      isHideComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once( 'revealComplete', function() {\n      isRevealComplete = true;\n      arrangeParallelCallback();\n    });\n  };\n\n  // -------------------------- filter -------------------------- //\n\n  proto._filter = function( items ) {\n    var filter = this.options.filter;\n    filter = filter || '*';\n    var matches = [];\n    var hiddenMatched = [];\n    var visibleUnmatched = [];\n\n    var test = this._getFilterTest( filter );\n\n    // test each item\n    for ( var i=0; i < items.length; i++ ) {\n      var item = items[i];\n      if ( item.isIgnored ) {\n        continue;\n      }\n      // add item to either matched or unmatched group\n      var isMatched = test( item );\n      // item.isFilterMatched = isMatched;\n      // add to matches if its a match\n      if ( isMatched ) {\n        matches.push( item );\n      }\n      // add to additional group if item needs to be hidden or revealed\n      if ( isMatched && item.isHidden ) {\n        hiddenMatched.push( item );\n      } else if ( !isMatched && !item.isHidden ) {\n        visibleUnmatched.push( item );\n      }\n    }\n\n    // return collections of items to be manipulated\n    return {\n      matches: matches,\n      needReveal: hiddenMatched,\n      needHide: visibleUnmatched\n    };\n  };\n\n  // get a jQuery, function, or a matchesSelector test given the filter\n  proto._getFilterTest = function( filter ) {\n    if ( jQuery && this.options.isJQueryFiltering ) {\n      // use jQuery\n      return function( item ) {\n        return jQuery( item.element ).is( filter );\n      };\n    }\n    if ( typeof filter == 'function' ) {\n      // use filter as function\n      return function( item ) {\n        return filter( item.element );\n      };\n    }\n    // default, use filter as selector string\n    return function( item ) {\n      return matchesSelector( item.element, filter );\n    };\n  };\n\n  // -------------------------- sorting -------------------------- //\n\n  /**\n   * @params {Array} elems\n   * @public\n   */\n  proto.updateSortData = function( elems ) {\n    // get items\n    var items;\n    if ( elems ) {\n      elems = utils.makeArray( elems );\n      items = this.getItems( elems );\n    } else {\n      // update all items if no elems provided\n      items = this.items;\n    }\n\n    this._getSorters();\n    this._updateItemsSortData( items );\n  };\n\n  proto._getSorters = function() {\n    var getSortData = this.options.getSortData;\n    for ( var key in getSortData ) {\n      var sorter = getSortData[ key ];\n      this._sorters[ key ] = mungeSorter( sorter );\n    }\n  };\n\n  /**\n   * @params {Array} items - of Isotope.Items\n   * @private\n   */\n  proto._updateItemsSortData = function( items ) {\n    // do not update if no items\n    var len = items && items.length;\n\n    for ( var i=0; len && i < len; i++ ) {\n      var item = items[i];\n      item.updateSortData();\n    }\n  };\n\n  // ----- munge sorter ----- //\n\n  // encapsulate this, as we just need mungeSorter\n  // other functions in here are just for munging\n  var mungeSorter = ( function() {\n    // add a magic layer to sorters for convienent shorthands\n    // `.foo-bar` will use the text of .foo-bar querySelector\n    // `[foo-bar]` will use attribute\n    // you can also add parser\n    // `.foo-bar parseInt` will parse that as a number\n    function mungeSorter( sorter ) {\n      // if not a string, return function or whatever it is\n      if ( typeof sorter != 'string' ) {\n        return sorter;\n      }\n      // parse the sorter string\n      var args = trim( sorter ).split(' ');\n      var query = args[0];\n      // check if query looks like [an-attribute]\n      var attrMatch = query.match( /^\\[(.+)\\]$/ );\n      var attr = attrMatch && attrMatch[1];\n      var getValue = getValueGetter( attr, query );\n      // use second argument as a parser\n      var parser = Isotope.sortDataParsers[ args[1] ];\n      // parse the value, if there was a parser\n      sorter = parser ? function( elem ) {\n        return elem && parser( getValue( elem ) );\n      } :\n      // otherwise just return value\n      function( elem ) {\n        return elem && getValue( elem );\n      };\n\n      return sorter;\n    }\n\n    // get an attribute getter, or get text of the querySelector\n    function getValueGetter( attr, query ) {\n      // if query looks like [foo-bar], get attribute\n      if ( attr ) {\n        return function getAttribute( elem ) {\n          return elem.getAttribute( attr );\n        };\n      }\n\n      // otherwise, assume its a querySelector, and get its text\n      return function getChildText( elem ) {\n        var child = elem.querySelector( query );\n        return child && child.textContent;\n      };\n    }\n\n    return mungeSorter;\n  })();\n\n  // parsers used in getSortData shortcut strings\n  Isotope.sortDataParsers = {\n    'parseInt': function( val ) {\n      return parseInt( val, 10 );\n    },\n    'parseFloat': function( val ) {\n      return parseFloat( val );\n    }\n  };\n\n  // ----- sort method ----- //\n\n  // sort filteredItem order\n  proto._sort = function() {\n    if ( !this.options.sortBy ) {\n      return;\n    }\n    // keep track of sortBy History\n    var sortBys = utils.makeArray( this.options.sortBy );\n    if ( !this._getIsSameSortBy( sortBys ) ) {\n      // concat all sortBy and sortHistory, add to front, oldest goes in last\n      this.sortHistory = sortBys.concat( this.sortHistory );\n    }\n    // sort magic\n    var itemSorter = getItemSorter( this.sortHistory, this.options.sortAscending );\n    this.filteredItems.sort( itemSorter );\n  };\n\n  // check if sortBys is same as start of sortHistory\n  proto._getIsSameSortBy = function( sortBys ) {\n    for ( var i=0; i < sortBys.length; i++ ) {\n      if ( sortBys[i] != this.sortHistory[i] ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // returns a function used for sorting\n  function getItemSorter( sortBys, sortAsc ) {\n    return function sorter( itemA, itemB ) {\n      // cycle through all sortKeys\n      for ( var i = 0; i < sortBys.length; i++ ) {\n        var sortBy = sortBys[i];\n        var a = itemA.sortData[ sortBy ];\n        var b = itemB.sortData[ sortBy ];\n        if ( a > b || a < b ) {\n          // if sortAsc is an object, use the value given the sortBy key\n          var isAscending = sortAsc[ sortBy ] !== undefined ? sortAsc[ sortBy ] : sortAsc;\n          var direction = isAscending ? 1 : -1;\n          return ( a > b ? 1 : -1 ) * direction;\n        }\n      }\n      return 0;\n    };\n  }\n\n  // -------------------------- methods -------------------------- //\n\n  // get layout mode\n  proto._mode = function() {\n    var layoutMode = this.options.layoutMode;\n    var mode = this.modes[ layoutMode ];\n    if ( !mode ) {\n      // TODO console.error\n      throw new Error( 'No layout mode: ' + layoutMode );\n    }\n    // HACK sync mode's options\n    // any options set after init for layout mode need to be synced\n    mode.options = this.options[ layoutMode ];\n    return mode;\n  };\n\n  proto._resetLayout = function() {\n    // trigger original reset layout\n    Outlayer.prototype._resetLayout.call( this );\n    this._mode()._resetLayout();\n  };\n\n  proto._getItemLayoutPosition = function( item  ) {\n    return this._mode()._getItemLayoutPosition( item );\n  };\n\n  proto._manageStamp = function( stamp ) {\n    this._mode()._manageStamp( stamp );\n  };\n\n  proto._getContainerSize = function() {\n    return this._mode()._getContainerSize();\n  };\n\n  proto.needsResizeLayout = function() {\n    return this._mode().needsResizeLayout();\n  };\n\n  // -------------------------- adding & removing -------------------------- //\n\n  // HEADS UP overwrites default Outlayer appended\n  proto.appended = function( elems ) {\n    var items = this.addItems( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded( items );\n    // add to filteredItems\n    this.filteredItems = this.filteredItems.concat( filteredItems );\n  };\n\n  // HEADS UP overwrites default Outlayer prepended\n  proto.prepended = function( elems ) {\n    var items = this._itemize( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // start new layout\n    this._resetLayout();\n    this._manageStamps();\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded( items );\n    // layout previous items\n    this.layoutItems( this.filteredItems );\n    // add to items and filteredItems\n    this.filteredItems = filteredItems.concat( this.filteredItems );\n    this.items = items.concat( this.items );\n  };\n\n  proto._filterRevealAdded = function( items ) {\n    var filtered = this._filter( items );\n    this.hide( filtered.needHide );\n    // reveal all new items\n    this.reveal( filtered.matches );\n    // layout new items, no transition\n    this.layoutItems( filtered.matches, true );\n    return filtered.matches;\n  };\n\n  /**\n   * Filter, sort, and layout newly-appended item elements\n   * @param {Array or NodeList or Element} elems\n   */\n  proto.insert = function( elems ) {\n    var items = this.addItems( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // append item elements\n    var i, item;\n    var len = items.length;\n    for ( i=0; i < len; i++ ) {\n      item = items[i];\n      this.element.appendChild( item.element );\n    }\n    // filter new stuff\n    var filteredInsertItems = this._filter( items ).matches;\n    // set flag\n    for ( i=0; i < len; i++ ) {\n      items[i].isLayoutInstant = true;\n    }\n    this.arrange();\n    // reset flag\n    for ( i=0; i < len; i++ ) {\n      delete items[i].isLayoutInstant;\n    }\n    this.reveal( filteredInsertItems );\n  };\n\n  var _remove = proto.remove;\n  proto.remove = function( elems ) {\n    elems = utils.makeArray( elems );\n    var removeItems = this.getItems( elems );\n    // do regular thing\n    _remove.call( this, elems );\n    // bail if no items to remove\n    var len = removeItems && removeItems.length;\n    // remove elems from filteredItems\n    for ( var i=0; len && i < len; i++ ) {\n      var item = removeItems[i];\n      // remove item from collection\n      utils.removeFrom( this.filteredItems, item );\n    }\n  };\n\n  proto.shuffle = function() {\n    // update random sortData\n    for ( var i=0; i < this.items.length; i++ ) {\n      var item = this.items[i];\n      item.sortData.random = Math.random();\n    }\n    this.options.sortBy = 'random';\n    this._sort();\n    this._layout();\n  };\n\n  /**\n   * trigger fn without transition\n   * kind of hacky to have this in the first place\n   * @param {Function} fn\n   * @param {Array} args\n   * @returns ret\n   * @private\n   */\n  proto._noTransition = function( fn, args ) {\n    // save transitionDuration before disabling\n    var transitionDuration = this.options.transitionDuration;\n    // disable transition\n    this.options.transitionDuration = 0;\n    // do it\n    var returnValue = fn.apply( this, args );\n    // re-enable transition for reveal\n    this.options.transitionDuration = transitionDuration;\n    return returnValue;\n  };\n\n  // ----- helper methods ----- //\n\n  /**\n   * getter method for getting filtered item elements\n   * @returns {Array} elems - collection of item elements\n   */\n  proto.getFilteredItemElements = function() {\n    return this.filteredItems.map( function( item ) {\n      return item.element;\n    });\n  };\n\n  // -----  ----- //\n\n  return Isotope;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}